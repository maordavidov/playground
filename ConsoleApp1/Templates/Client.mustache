using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using {{Subsystem}}.{{ServiceName}}.WebApi.Contracts;

namespace {{Subsystem}}.{{ServiceName}}.WebApi.Client
{
    public class {{Tag}}Client : I{{Tag}}Client
    {
        private ApiClient _client;

        public {{Tag}}Client(ApiClient client)
        {
            _client = client;
        }


{{#Operations}}
{{#IsVoid}}
{{#HasInput}}
	public Task {{Id}}({{Name}}Request request, CancellationToken cancelToken = default)
{{/HasInput}}
{{^HasInput}}
    public Task {{Id}}(CancellationToken cancelToken = default)
{{/HasInput}}
{{/IsVoid}}
{{^IsVoid}}
{{#HasInput}}
	public Task<{{ResultType}}> {{Id}}({{Name}}Request request, CancellationToken cancelToken = default)
{{/HasInput}}
{{^HasInput}}
    public Task<{{ResultType}}> {{Id}}(CancellationToken cancelToken = default)
{{/HasInput}}
{{/IsVoid}}
        {
            string path = $"{{Path}}";
{{#HasBody}}
            return _client.{{HttpMethod}}Async<{{BodyType}}, {{ResultType}}>(path, request.Body, cancelToken);
{{/HasBody}}
{{^HasBody}}
{{#IsVoid}}
            return _client.{{HttpMethod}}Async(path, cancelToken);
{{/IsVoid}}
{{^IsVoid}}
            return _client.{{HttpMethod}}Async<{{ResultType}}>(path, cancelToken);
{{/IsVoid}}
{{/HasBody}}
        }
{{/Operations}}
    }
}